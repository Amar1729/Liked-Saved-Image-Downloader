* Content Collector

Use this awesome tool to download
- Images
- Gifs
- Image Albums
- Videos
- Comments

...which you've marked as Liked, Hearted, or Saved from

- Reddit
- Tumblr
- Pixiv

...to disk! You can then browse the results.

** Directions

*** 1. Clone this repository

#+BEGIN_SRC sh
git clone https://github.com/makuto/redditLikedSavedImageDownloader
#+END_SRC

*** 2. Install python dependencies

The following dependencies are required:

#+BEGIN_SRC sh
pip install praw pytumblr ImgurPython jsonpickle tornado youtube-dl git+https://github.com/ankeshanand/py-gfycat@master git+https://github.com/upbit/pixivpy
#+END_SRC

You'll want to use Python 3, which for your environment may require you to specify ~pip3~ instead of just ~pip~.

**** Login-Protected Server

If you want to require the user to login before they can interact with the server, you must install passlib:

#+BEGIN_SRC sh
pip install passlib bcrypt argon2_cffi
#+END_SRC

*** 3. Generate SSL keys

#+BEGIN_SRC sh
cd redditLikedSavedImageDownloader/
./Generate_Certificates.sh
#+END_SRC

This step is only required if you want to use SSL, which ensures you have an encrypted connection to the server. You can disable this by opening ~LikedSavedDownloaderServer.py~ and setting ~useSSL = False~.

*** 4. Run the server

#+BEGIN_SRC sh
python3 LikedSavedDownloaderServer.py
#+END_SRC

** Usage
*** Access the server
Open [[https://localhost:8888][localhost:8888]] in any web browser.

If your web browser complains about the certificate, you may have to click ~Advanced~ and add the certificate as trustworthy, because you've signed the certificate and trust yourself :). 

/(Explanation: this certificate isn't trusted by your browser because you created it. It will still protect your traffic from people snooping on your LAN)./

If you want to get rid of this, you'll need to get a signing authority like ~LetsEncrypt~ to generate your certificate, and host the server under a proper domain.
*** Set password
When first running the server, you will be prompted to set a password.

/If you forget your password, simply delete passwords.txt/.

*** Home page

The home page provides access to all server features:

[[file:images/Homepage.png]]

*** Set up accounts

Use Settings to configure the script:

[[file:images/LikedSavedSettings.png]]

*Make sure to click "Save Settings" before closing the page.*

You don't have to fill in every field, only the accounts you want.

*** Download content
Go to the Download Content page and click "Download new content":

[[file:images/DownloadContent.png]]

Wait until the downloader finishes (it will say "Finished" at the bottom of the page). While the downloader is running, the "Download new content" button will disappear.


*** Browse content
Enjoy! Use Browse Content to jump to random content you've downloaded, or browse your output directory:

[[file:images/LikedSavedBrowser.png]]

The browser should scale nicely to work on both mobile and desktop.

** Web Server Features

This repository includes a web server interface. Unlike the main script, the server is supported in Python 3 only.

The interface can be seen by visiting ~https://localhost:8888~ in any web browser.

*The web server is not secure in any way and should NOT be run on an insecure network!*

*** Login-Authenticated Server

The script includes an option to require login before running the script, changing settings, or browsing downloaded content.

*I'm no expert, so use and trust at your own risk!* This security is essentially a cheap padlock which keeps honest people honest and undetermined intruders out.

It requires some additional setup:

**** 1. Enable it in ~LikedSavedDownloaderServer.py~

Open ~LikedSavedDownloaderServer.py~ and find ~enable_authentication~. Set it equal to ~True~.

**** 2. Create your account(s)

Rather than have a web-based registration process, you'll create each account manually. This is because this service is only designed for private use.

You'll use ~PasswordManager.py~ to generate a file ~passwords.txt~ with your hashed (and salted) passwords:

#+BEGIN_SRC sh
python3 PasswordManager.py "Your Password Here"
#+END_SRC

You can create multiple valid passwords, if desired.

If you want to reset all passwords, simply delete ~passwords.txt~.

**** 3. Restart your server

You should now see a Login page before being able to access any content.

Note that all login cookies will be invalidated each time you restart the server.

** Running the script only

*This is deprecated.* You should use the web server to configure and run the script instead.

1. Copy ~settings_template.txt~ into a new file called ~settings.txt~
2. Open ~settings.txt~
3. Fill in your username and password
4. Set ~SHOULD_SOFT_RETRIEVE~ to ~False~ if you are sure you want to do this
5. Run the script: ~python redditUserImageScraper.py~
6. Wait for a while
7. Check your output directory (the default is ~output~ relative to where you ran the script) for all your images!

If you want more images, set ~Reddit_Total_Requests~ and/or ~Tumblr_Total_Requests~ to a higher value. The maximum is 1000. Unfortunately, reddit does not allow you to get more than 1000 submissions of a single type (1000 liked, 1000 saved).

Not actually getting images downloaded, but seeing the console say it downloaded images? Make sure ~SHOULD_SOFT_RETRIEVE=False~ in ~settings.txt~

~settings.txt~ has several additional features. Read the comments to know how to use them.

** OSX Python issues
On OSX, running the downloader from the Content Collector server may cause this error:

#+BEGIN_SRC sh
Output: output
objc[29889]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called.
#+END_SRC

This is a problem with Python and OSX's security model clashing. See [[https://github.com/ansible/ansible/issues/32499][this issue]] for an explanation.

To work around it, you need to first run

#+BEGIN_SRC sh
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
#+END_SRC

...before running the Content Collector server in that same terminal.

Or add the bash profile suggested in [[https://stackoverflow.com/questions/50168647/multiprocessing-causes-python-to-crash-and-gives-an-error-may-have-been-in-progr][this answer]].

** Issues

Feel free to create Issues on this repo if you need help. I'm friendly so don't be shy.

